// <auto-generated />
using System;
using FazendaUrbanaV1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FazendaUrbanaV1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241019105105_AlterCategoriaID")]
    partial class AlterCategoriaID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FazendaUrbanaV1.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Fazenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaX")
                        .HasColumnType("int");

                    b.Property<int>("AreaY")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fazendas");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.FazendaLocais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FazendaLocais");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Funcao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcoes");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Parceiros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cliente")
                        .HasColumnType("bit");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parceiros");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Producao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataColheita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPlantacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdSemente")
                        .HasColumnType("int");

                    b.Property<int>("LocalFazenda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producaos");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Preco")
                        .HasColumnType("real");

                    b.Property<bool?>("Producao")
                        .HasColumnType("bit");

                    b.Property<int?>("ProducaoEmSegundos")
                        .HasColumnType("int");

                    b.Property<int?>("ValidadeEmSegundos")
                        .HasColumnType("int");

                    b.Property<bool?>("Venda")
                        .HasColumnType("bit");

                    b.Property<float?>("VlrCusto")
                        .HasColumnType("real");

                    b.Property<float?>("VlrVenda")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuncaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFaturamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdParceiro")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.VendasIte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<float?>("PercDesc")
                        .HasColumnType("real");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.Property<float?>("VlrTotal")
                        .HasColumnType("real");

                    b.Property<float?>("VlrUnit")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("VendaId");

                    b.ToTable("VendasIte");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Produtos", b =>
                {
                    b.HasOne("FazendaUrbanaV1.Models.Categorias", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Usuario", b =>
                {
                    b.HasOne("FazendaUrbanaV1.Models.Funcao", "Funcao")
                        .WithMany("Usuarios")
                        .HasForeignKey("FuncaoId");

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.VendasIte", b =>
                {
                    b.HasOne("FazendaUrbanaV1.Models.Vendas", "Vendas")
                        .WithMany("vendasIte")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Categorias", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Funcao", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("FazendaUrbanaV1.Models.Vendas", b =>
                {
                    b.Navigation("vendasIte");
                });
#pragma warning restore 612, 618
        }
    }
}
